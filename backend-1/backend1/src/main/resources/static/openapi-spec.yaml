openapi: "3.0.3"
info:
  title: "backend1 API"
  description: "Backend API for receipts, purchases, and direct outflows"
  version: "1.0.0"
servers:
  - url: "https://localhost:8080"
paths:
  /api/receipts:
    post:
      summary: "POST api/receipts"
      operationId: "postOneToDB"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReceiptDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
    get:
      summary: "GET api/receipts"
      operationId: "getAllReceipts"
      parameters:
        - name: "from"
          in: "query"
          required: false
          schema:
            $ref: "#/components/schemas/Date"
        - name: "until"
          in: "query"
          required: false
          schema:
            $ref: "#/components/schemas/Date"
        - name: "outflowCategory"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/receipts/{id}:
    get:
      summary: "GET api/receipts/{id}"
      operationId: "getOneReceiptById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/purchases:
    post:
      summary: "POST api/purchases"
      operationId: "postOneToDB"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurchaseDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
    get:
      summary: "GET api/purchases"
      operationId: "getAllPurchase"
      parameters:
        - name: "item"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/purchases/{id}:
    get:
      summary: "GET api/purchases/{id}"
      operationId: "getOnePurchase"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/directs:
    post:
      summary: "POST api/directs"
      operationId: "postToDB"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DirectDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
    get:
      summary: "GET api/directs"
      operationId: "getAllDirect"
      parameters:
        - name: "category"
          in: "query"
          required: false
          schema:
            type: "string"
        - name: "cashFlowId"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
        - name: "receiptId"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/directs/{id}:
    get:
      summary: "GET api/directs/{id}"
      operationId: "getDirectById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
components:
  schemas:
    Date:
      type: "object"
      properties: { }
    Time:
      type: "object"
      properties: { }
    ReceiptDTO:
      type: "object"
      properties:
        merchant:
          type: "string"
        dateOfPurchase:
          $ref: "#/components/schemas/Date"
        time:
          $ref: "#/components/schemas/Time"
        totalPrice:
          type: "number"
          format: "double"
        outflowCategory:
          type: "string"
    PurchaseDTO:
      type: "object"
      properties:
        item:
          type: "string"
        quantity:
          type: "integer"
          format: "int32"
        unitPrice:
          type: "number"
          format: "double"
        receiptId:
          type: "integer"
          format: "int32"
    DirectDTO:
      type: "object"
      properties:
        category:
          type: "string"
        unit:
          type: "string"
        quantity:
          type: "integer"
          format: "int32"
        unitPrice:
          type: "number"
          format: "double"
        cashFlowId:
          type: "integer"
          format: "int32"